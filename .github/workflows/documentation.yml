name: Documentation Quality Check

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  # Allow manual triggering
  workflow_dispatch:

jobs:
  vale-linting:
    name: Vale Documentation Linting
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Vale
      uses: errata-ai/vale-action@reviewdog
      with:
        # Version of Vale to use
        version: '3.12.0'
        # Files to lint (supports glob patterns)
        files: '["*.md", "*.adoc", "docs/**/*.md", "docs/**/*.adoc", "lib/examples/**/*.md"]'
        # Vale configuration file
        config: .vale.ini
        # Upload results as annotations
        reporter: github-pr-review
        # Fail on error level (suggestion, warning, error)
        level: warning
      env:
        # Required for PR comments
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  documentation-tests:
    name: Documentation Build Test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.1'
        bundler-cache: true
        
    - name: Install Vale
      run: |
        wget -O vale.tar.gz https://github.com/errata-ai/vale/releases/download/v3.12.0/vale_3.12.0_Linux_64-bit.tar.gz
        tar -xzf vale.tar.gz
        sudo mv vale /usr/local/bin/
        vale --version
        
    - name: Setup Vale styles
      run: |
        vale sync
        
    - name: Run documentation quality checks
      run: |
        bundle exec rake quality
        
    - name: Test documentation examples
      run: |
        # Test any code examples in documentation
        if [ -d "lib/examples" ]; then
          echo "Testing documentation examples..."
          for file in lib/examples/*.yml; do
            if [ -f "$file" ]; then
              echo "Validating $file"
              ruby -e "require 'yaml'; YAML.load_file('$file')" || exit 1
            fi
          done
        fi
